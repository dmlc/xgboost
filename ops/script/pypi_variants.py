"""Create Package variants for PyPI distribution."""

import argparse
import os

from test_utils import PY_PACKAGE, ROOT

in_path = os.path.join(PY_PACKAGE, "pyproject.toml.in")
out_path = os.path.join(PY_PACKAGE, "pyproject.toml")

whl_cpu = """
[tool.hatch.build.targets.wheel]
packages = ["xgboost/"]
"""


def copyfile(src: str, dst: str) -> None:
    with open(src, "rb") as fd:
        content = fd.read()
    with open(dst, "wb") as fd:
        fd.write(content)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--variant",
        type=str,
        choices=["default", "cpu", "manylinux2014"],
        default="default",
    )
    args = parser.parse_args()

    with open(in_path) as fd:
        pyproject = fd.read()

    readme_dft = os.path.join(PY_PACKAGE, "README.dft.rst")
    readme_cpu = os.path.join(PY_PACKAGE, "README.cpu.rst")
    readme = os.path.join(PY_PACKAGE, "README.rst")
    if args.variant == "cpu":
        pyproject = (
            pyproject.replace("{{ name }}", "xgboost-cpu")
            .replace("{{ wheel }}", whl_cpu)
            .replace("{{ nccl }}", "")
        )
        copyfile(readme_cpu, readme)
    elif args.variant == "manylinux2014":
        pyproject = (
            pyproject.replace("{{ name }}", "xgboost")
            .replace("{{ wheel }}", "")
            .replace("{{ nccl }}", "")
        )
        copyfile(readme_dft, readme)
    else:
        pyproject = (
            pyproject.replace("{{ name }}", "xgboost")
            .replace("{{ wheel }}", "")
            .replace(
                "{{ nccl }}",
                """    \"nvidia-nccl-cu12 ; platform_system == 'Linux' and platform_machine != 'aarch64'\",""",
            )
        )
        copyfile(readme_dft, readme)
    pyproject = (
        f"# Generated by `{os.path.basename(__file__)}`, don't not edit.\n" + pyproject
    )

    with open(out_path, "w") as fd:
        fd.write(pyproject)
