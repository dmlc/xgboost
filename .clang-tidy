Checks: 'modernize-*,-modernize-make-*,-modernize-use-auto,-modernize-raw-string-literal,-modernize-avoid-c-arrays,-modernize-use-trailing-return-type,google-*,-google-default-arguments,-clang-diagnostic-#pragma-messages,readability-identifier-naming'
CheckOptions:
  - { key: readability-identifier-naming.ClassCase,                 value: CamelCase  }
  - { key: readability-identifier-naming.StructCase,                value: CamelCase  }
  - { key: readability-identifier-naming.TypeAliasCase,             value: CamelCase  }
  - { key: readability-identifier-naming.TypedefCase,               value: CamelCase  }
  - { key: readability-identifier-naming.TypeTemplateParameterCase, value: CamelCase  }
  - { key: readability-identifier-naming.MemberCase,                value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberSuffix,       value: '_'        }
  - { key: readability-identifier-naming.ProtectedMemberSuffix,     value: '_'        }
  - { key: readability-identifier-naming.EnumCase,                  value: CamelCase  }
  - { key: readability-identifier-naming.EnumConstant,              value: CamelCase  }
  - { key: readability-identifier-naming.EnumConstantPrefix,        value: k          }
  - { key: readability-identifier-naming.GlobalConstantCase,        value: CamelCase  }
  - { key: readability-identifier-naming.GlobalConstantPrefix,      value: k          }
  - { key: readability-identifier-naming.StaticConstantCase,        value: CamelCase  }
  - { key: readability-identifier-naming.StaticConstantPrefix,      value: k          }
  - { key: readability-identifier-naming.ConstexprVariableCase,     value: CamelCase  }
  - { key: readability-identifier-naming.ConstexprVariablePrefix,   value: k          }
  - { key: readability-identifier-naming.FunctionCase,              value: CamelCase  }
  - { key: readability-identifier-naming.NamespaceCase,             value: lower_case }
