name: XGBoost-R-Tests

on: [push, pull_request]

env:
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  lintr:
    runs-on: ${{ matrix.config.os }}
    name: Run R linters on OS ${{ matrix.config.os }}, R ${{ matrix.config.r }}, Compiler ${{ matrix.config.compiler }}, Build ${{ matrix.config.build }}
    strategy:
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release'}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.config.r }}

    - name: Cache R packages
      uses: actions/cache@v2
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ matrix.config.r }}-5-${{ hashFiles('R-package/DESCRIPTION') }}
        restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-5-${{ hashFiles('R-package/DESCRIPTION') }}

    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"
        architecture: 'x64'

    - name: Install dependencies
      shell: Rscript {0}
      run: |
        source("./R-package/tests/helper_scripts/install_deps.R")

    - name: Run lintr
      run: |
        cd R-package
        MAKEFLAGS=-j$(nproc)" R CMD INSTALL .
        # Disable lintr errors for now: https://github.com/dmlc/xgboost/issues/8012
        Rscript tests/helper_scripts/run_lint.R || true

  test-with-R:
    runs-on: ${{ matrix.config.os }}
    name: Test R on OS ${{ matrix.config.os }}, R ${{ matrix.config.r }}, Compiler ${{ matrix.config.compiler }}, Build ${{ matrix.config.build }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release', compiler: 'mingw', build: 'autotools'}
          - {os: windows-latest, r: 'release', compiler: 'msvc', build: 'cmake'}
          - {os: ubuntu-latest, r: 'release', compiler: 'mingw', build: 'autotools'}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.config.r }}

    - name: Cache R packages
      uses: actions/cache@v2
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ matrix.config.r }}-5-${{ hashFiles('R-package/DESCRIPTION') }}
        restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-5-${{ hashFiles('R-package/DESCRIPTION') }}

    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"
        architecture: 'x64'

    - name: Install system dependencies
      if: matrix.config.os != "windows-latest"
      run: |
        sudo apt update && sudo apt install libcurl4-openssl-dev libssl-dev libssh2-1-dev libgit2-dev pandoc pandoc-citeproc libglpk-dev libxml2-dev git -y

    - name: Install dependencies
      shell: Rscript {0}
      run: |
        source("./R-package/tests/helper_scripts/install_deps.R")

    - name: Test R
      run: |
        python tests/ci_build/test_r_package.py --compiler='${{ matrix.config.compiler }}' --build-tool="${{ matrix.config.build }}" --task=check
