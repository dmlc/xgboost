Developer guide: updating R vignette
====================================

The R package for XGBoost includes an introductory vignette ``xgboost_introduction``, which is built from a quarto source file (``.qmd``).

This vignette is included in both the CRAN package and the online docs. The vignette in the CRAN package gets automatically built upon creation of the installable package artifact, but the one in the online docs needs to be rebuilt and re-commited if the quarto source file is modified.

The rendered vignette in the online docs is compiled to ``.md`` instead of ``.html``, hence it needs to be rendered with non-default options, and importantly, **the source vignette should not render any graphical outputs** (just formatted text), as those do not get included when compiling to ``.md``.

To update the ``.md`` file, execute the file ``update_md_vignette.sh`` under ``/R-package`` (from XGBoost's root) using a POSIX-compliant shell (like ``bash``):

.. code-block:: shell
    ./update_md_vignette.sh

Since generation of ``.md`` files is from ``.qmd`` is not supported with the default knitr engine, it needs to use the jupyter engine instead, through the R kernel 'ir' - meaning: re-creating the vignette needs an installation of ``quarto``, ``nbconvert``, ``nbformat``, ``ipykernel``, ``ir``, ``R``, `xgboost's R package, and its R dependencies.

As the IR jupyter kernel is not the default rendering engine for ``.qmd``, the script ``update_md_vignette.py`` modifies the source file by adding an extra line ``jupyter: ir`` in the yaml header, and uses the resulting modified ``.qmd`` file to compile to ``.md``. This line ``jupyter: ir`` should not be committed to the ``.qmd`` source file as it is not available on CRAN and therefore vignettes from the R package wouldn't build with that line included.

Note that knitr and IR render tables from data frames differently, so the files generated by each engine will not match exactly.
